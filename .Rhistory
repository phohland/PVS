just_one_condition <- FALSE
if (is.null(treatment) || is.null(condition)) {
just_one_condition <- TRUE
}
# Warnings leading to abort
if (is.null(data_path)) {
warning("There was no data path found. Please insert your data path including
the file ending in the following way: data_path = 'example_file.csv'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (!(file.exists(data_path))) {
warning("The inserted file was not found. Please insert your data path in the
following way: data_path = 'example_path'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (!(data_ending %in% c("csv", "xls", "xlsx", "txt"))) {
warning("The inserted file has no csv-, txt-, xls- or xlsx-ending. A file with one
of those endings is necessairy.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(id)) {
warning("There was no id column name found. Please insert your id column name
in the following way: id = 'id'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(treatment) && is.null(condition)) {
warning("There was neither a treatment nor a condition column name found.
Please insert at least one of them in the following way:
treatment = 'treatment'
or condition = 'condition'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(day) && is.null(form_to_day)) {
warning("There was neither a day nor a column to form to a day column found.
Please insert at least one of them in the following way:
day = 'day'
or form_to_day = 'exam_date'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(vars)) {
warning("There were no variable column names found. Please insert your variable column names
in the following way: vars = c('var1','var2').
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(vars)) {
warning("There were no variable column names found. Please insert your variable column names
in the following way: vars = c('var1','var2').
The hRELSA was not calculated.")
abort <- TRUE
}
# Warnings leading to no abort
if (is.null(data_seperation) && data_ending %in% c("csv", "txt")) {
data_seperation <- ","
cat("While processing the inserted csv file the assumption that the data is
seperated with a ',' has been made.
If the file is not seperated that way, please use: data_seperation = ''.\n")
}
if (is.null(data_decimal) && data_ending %in% c("csv", "txt")) {
data_decimal <- "."
cat("While processing the inserted csv file the assumption that the data
decimal seperation is '.' has been made.
If the decimal seperation is not that way, please use: data_decimal = '.'.\n")
}
if (is.null(data_sheet) && data_ending %in% c("xls", "xlsx")) {
data_sheet <- 1
cat("While processing the inserted excel file the assumption that the data
is in sheet 1 has been made.
If the data is in another sheet, please use e.g.: data_sheet = 2.\n")
}
if (!(is.null(day)) && !(is.null(form_to_day))) {
warning("You can't form a day column if you already have one. Your own day
column has been used.")
form_to_day <- NULL
new_day_one <- NULL
}
if (is.null(new_day_one) && !(is.null(form_to_day))) {
new_day_one <- TRUE
cat("While processing the inserted time column the assumption that each
patient should get a new day one at his first time point has been made.
If only one day one at the earliest time point of the data set is wished,
please use: new_day_one = FALSE.\n")
}
if (is.null(day_format) && !(is.null(form_to_day))) {
day_format <- "%d%b%Y"
cat("While processing the inserted time column the assumption that the date
format is %d%b%Y has been made. If the format is otherwise,
please use: day_format = ''.\n")
}
if (is.null(k) && !(is.null(levels))) {
k <- 4
cat("You want the levels to be given out as well and did not stated the amount
of the k levels. While processing the levels k = 4 was used.
If wished otherwise, please use e.g.: k = 5.\n")
}
abort <- FALSE
data_ending <- file_ext(data_path)
just_one_condition <- FALSE
if (is.null(treatment) || is.null(condition)) {
just_one_condition <- TRUE
}
if (is.null(data_path)) {
warning("There was no data path found. Please insert your data path including
the file ending in the following way: data_path = 'example_file.csv'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (!(file.exists(data_path))) {
warning("The inserted file was not found. Please insert your data path in the
following way: data_path = 'example_path'.
The hRELSA was not calculated.")
abort <- TRUE
}
library(hRELSA)
pacman::p_load(tidyverse, tools)
data_path = "surgery.txt"
data_seperation = "\t"
data_decimal = "."
data_sheet = NULL
# data formation
id = "id"
treatment = "treatment"
condition = "condition"
day = "day"
form_to_day = NULL
day_format = NULL
new_day_one = NULL
vars = c("bwc","burON", "hr", "hrv", "temp", "act")
turnvars = c("hr", "temp")
zvars = NULL
dropvars = NULL
# normalization
baseline_day = -1
# levels
levels = TRUE
k = 4
plot_instead_of_scree = FALSE
#plot
which_patient = 13
which_var_to_plot = c("hr")
abort <- FALSE
data_ending <- file_ext(data_path)
just_one_condition <- FALSE
if (is.null(treatment) || is.null(condition)) {
just_one_condition <- TRUE
}
# Warnings leading to abort
if (is.null(data_path)) {
warning("There was no data path found. Please insert your data path including
the file ending in the following way: data_path = 'example_file.csv'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (!(file.exists(data_path))) {
warning("The inserted file was not found. Please insert your data path in the
following way: data_path = 'example_path'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (!(data_ending %in% c("csv", "xls", "xlsx", "txt"))) {
warning("The inserted file has no csv-, txt-, xls- or xlsx-ending. A file with one
of those endings is necessairy.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(id)) {
warning("There was no id column name found. Please insert your id column name
in the following way: id = 'id'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(treatment) && is.null(condition)) {
warning("There was neither a treatment nor a condition column name found.
Please insert at least one of them in the following way:
treatment = 'treatment'
or condition = 'condition'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(day) && is.null(form_to_day)) {
warning("There was neither a day nor a column to form to a day column found.
Please insert at least one of them in the following way:
day = 'day'
or form_to_day = 'exam_date'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(vars)) {
warning("There were no variable column names found. Please insert your variable column names
in the following way: vars = c('var1','var2').
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(vars)) {
warning("There were no variable column names found. Please insert your variable column names
in the following way: vars = c('var1','var2').
The hRELSA was not calculated.")
abort <- TRUE
}
# Warnings leading to no abort
if (is.null(data_seperation) && data_ending %in% c("csv", "txt")) {
data_seperation <- ","
cat("While processing the inserted csv file the assumption that the data is
seperated with a ',' has been made.
If the file is not seperated that way, please use: data_seperation = ''.\n")
}
if (is.null(data_decimal) && data_ending %in% c("csv", "txt")) {
data_decimal <- "."
cat("While processing the inserted csv file the assumption that the data
decimal seperation is '.' has been made.
If the decimal seperation is not that way, please use: data_decimal = '.'.\n")
}
if (is.null(data_sheet) && data_ending %in% c("xls", "xlsx")) {
data_sheet <- 1
cat("While processing the inserted excel file the assumption that the data
is in sheet 1 has been made.
If the data is in another sheet, please use e.g.: data_sheet = 2.\n")
}
if (!(is.null(day)) && !(is.null(form_to_day))) {
warning("You can't form a day column if you already have one. Your own day
column has been used.")
form_to_day <- NULL
new_day_one <- NULL
}
if (is.null(new_day_one) && !(is.null(form_to_day))) {
new_day_one <- TRUE
cat("While processing the inserted time column the assumption that each
patient should get a new day one at his first time point has been made.
If only one day one at the earliest time point of the data set is wished,
please use: new_day_one = FALSE.\n")
}
if (is.null(day_format) && !(is.null(form_to_day))) {
day_format <- "%d%b%Y"
cat("While processing the inserted time column the assumption that the date
format is %d%b%Y has been made. If the format is otherwise,
please use: day_format = ''.\n")
}
if (is.null(k) && !(is.null(levels))) {
k <- 4
cat("You want the levels to be given out as well and did not stated the amount
of the k levels. While processing the levels k = 4 was used.
If wished otherwise, please use e.g.: k = 5.\n")
}
library(hRELSA)
pacman::p_load(tidyverse, tools)
data_path = "surgery.txt"
data_seperation = "\t"
data_decimal = "."
data_sheet = NULL
# data formation
id = "id"
treatment = "treatment"
condition = "condition"
day = "day"
form_to_day = NULL
day_format = NULL
new_day_one = NULL
vars = c("bwc","burON", "hr", "hrv", "temp", "act")
turnvars = c("hr", "temp")
zvars = NULL
dropvars = NULL
# normalization
baseline_day = -1
# levels
levels = TRUE
k = 4
plot_instead_of_scree = FALSE
#plot
which_patient = 13
which_var_to_plot = c("hr")
if (!(file.exists(data_path))) {
warning("The inserted file was not found. Please insert your data path in the
following way: data_path = 'example_path'.
The hRELSA was not calculated.")
abort <- TRUE
}
library(hRELSA)
pacman::p_load(tidyverse, tools)
data_path = "R/surgery.txt"
data_seperation = "\t"
data_decimal = "."
data_sheet = NULL
# data formation
id = "id"
treatment = "treatment"
condition = "condition"
day = "day"
form_to_day = NULL
day_format = NULL
new_day_one = NULL
vars = c("bwc","burON", "hr", "hrv", "temp", "act")
turnvars = c("hr", "temp")
zvars = NULL
dropvars = NULL
# normalization
baseline_day = -1
# levels
levels = TRUE
k = 4
plot_instead_of_scree = FALSE
#plot
which_patient = 13
which_var_to_plot = c("hr")
abort <- FALSE
data_ending <- file_ext(data_path)
just_one_condition <- FALSE
if (is.null(treatment) || is.null(condition)) {
just_one_condition <- TRUE
}
# Warnings leading to abort
if (is.null(data_path)) {
warning("There was no data path found. Please insert your data path including
the file ending in the following way: data_path = 'example_file.csv'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (!(file.exists(data_path))) {
warning("The inserted file was not found. Please insert your data path in the
following way: data_path = 'example_path'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (!(data_ending %in% c("csv", "xls", "xlsx", "txt"))) {
warning("The inserted file has no csv-, txt-, xls- or xlsx-ending. A file with one
of those endings is necessairy.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(id)) {
warning("There was no id column name found. Please insert your id column name
in the following way: id = 'id'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(treatment) && is.null(condition)) {
warning("There was neither a treatment nor a condition column name found.
Please insert at least one of them in the following way:
treatment = 'treatment'
or condition = 'condition'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(day) && is.null(form_to_day)) {
warning("There was neither a day nor a column to form to a day column found.
Please insert at least one of them in the following way:
day = 'day'
or form_to_day = 'exam_date'.
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(vars)) {
warning("There were no variable column names found. Please insert your variable column names
in the following way: vars = c('var1','var2').
The hRELSA was not calculated.")
abort <- TRUE
}
if (is.null(vars)) {
warning("There were no variable column names found. Please insert your variable column names
in the following way: vars = c('var1','var2').
The hRELSA was not calculated.")
abort <- TRUE
}
# Warnings leading to no abort
if (is.null(data_seperation) && data_ending %in% c("csv", "txt")) {
data_seperation <- ","
cat("While processing the inserted csv file the assumption that the data is
seperated with a ',' has been made.
If the file is not seperated that way, please use: data_seperation = ''.\n")
}
if (is.null(data_decimal) && data_ending %in% c("csv", "txt")) {
data_decimal <- "."
cat("While processing the inserted csv file the assumption that the data
decimal seperation is '.' has been made.
If the decimal seperation is not that way, please use: data_decimal = '.'.\n")
}
if (is.null(data_sheet) && data_ending %in% c("xls", "xlsx")) {
data_sheet <- 1
cat("While processing the inserted excel file the assumption that the data
is in sheet 1 has been made.
If the data is in another sheet, please use e.g.: data_sheet = 2.\n")
}
if (!(is.null(day)) && !(is.null(form_to_day))) {
warning("You can't form a day column if you already have one. Your own day
column has been used.")
form_to_day <- NULL
new_day_one <- NULL
}
if (is.null(new_day_one) && !(is.null(form_to_day))) {
new_day_one <- TRUE
cat("While processing the inserted time column the assumption that each
patient should get a new day one at his first time point has been made.
If only one day one at the earliest time point of the data set is wished,
please use: new_day_one = FALSE.\n")
}
if (is.null(day_format) && !(is.null(form_to_day))) {
day_format <- "%d%b%Y"
cat("While processing the inserted time column the assumption that the date
format is %d%b%Y has been made. If the format is otherwise,
please use: day_format = ''.\n")
}
if (is.null(k) && !(is.null(levels))) {
k <- 4
cat("You want the levels to be given out as well and did not stated the amount
of the k levels. While processing the levels k = 4 was used.
If wished otherwise, please use e.g.: k = 5.\n")
}
if (data_ending %in% c("csv", "txt")) {
raw <- read.csv(data_path, sep = data_seperation, header = TRUE, dec = data_decimal, row.names = NULL)
} else if (data_ending == "xlsx" || data_ending == "xls") {
raw <- read_excel(data_path, sheet = data_sheet)
}
raw
as_tibble(raw)
raw <- as_tibble(raw)
#raw <- raw %>% clean_names
col_id <- which(names(raw) == id)
colnames(raw)[col_id] <- "id"
raw
if (is.null(day)) {
raw <- hrelsa_days(raw, format = "day", date_format = day_format, formthis = form_to_day, newdayone = new_day_one)
day <- "day"
}
raw
dat <- hrelsa_format(raw, id = id, treatment = treatment, condition = condition, day = day, vars = vars)
dat
pre <- hrelsa_norm(dat, normthese = vars, zvars = zvars, ontime = baseline_day)
pre
print (n = 300)
print(pre, n = 300)
bsl <- hrelsa_baselines(pre, bslday = baseline_day, vars = vars, zvars = zvars, turnvars = turnvars)
bsl
final <- hrelsa_final(pre, bsl, drop = dropvars, turnvars = turnvars, zvars = zvars)
final
abort <- FALSE
if (is.null(pre)) {
warning("There was no data set found. The baseline was not calculated.")
abort <- TRUE
}
if (is.null(bsl)) {
warning("There was no baseline found. The baseline was not calculated.")
abort <- TRUE
}
unique(pre$id
unique(pre$id))
unique(pre$id)
length(unique(pre$id)
length(unique(pre$id))
length(unique(pre$id))
i <- 11
RELSA        <- hrelsa(
pre = pre,
bsl,
a = i,
drop = NULL,
turnvars = turnvars,
zvars = zvars,
relsaNA = relsaNA
)$relsa
relsaNA = NA
RELSA        <- hrelsa(
pre = pre,
bsl,
a = i,
drop = NULL,
turnvars = turnvars,
zvars = zvars,
relsaNA = relsaNA
)$relsa
RELSA
i <- 1
RELSA        <- hrelsa(
pre = pre,
bsl,
a = i,
drop = NULL,
turnvars = turnvars,
zvars = zvars,
relsaNA = relsaNA
)$relsa
RELSA
# Build a data subset defined by the chosen patient
whichhuman  <- unique(pre$id)
subdata     <- pre[pre$id == whichhuman[a], which(names(pre) == "day"):dim(pre)[2]]
a <- 1
whichhuman  <- unique(pre$id)
subdata     <- pre[pre$id == whichhuman[a], which(names(pre) == "day"):dim(pre)[2]]
day         <- subdata$day
whichhuman
subdata
day
if (length(turnvars[turnvars %in% names(subdata)]) == 0) {
turnvars <- NULL
}
delta            <- 100 - subdata[-1]
bsdelta          <- 100 - bsl$maxsev
delta
bsdelta
if (length(turnvars) > 0) {
delta[, turnvars] <- delta[, turnvars] * -1
bsdelta[turnvars] <- bsdelta[turnvars] * -1
}
delta
bsdelta
delta
dat
print(dat, n = 30)
